
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// Layers
#define macOS 0
#define winOS 1
#define NUMSYM 2
#define STTG 3

// Combination Behaviors
// ___________________________________________________________________________________________________________________________________________
// |  0  |  1  |  2  |  3  |  4  |  5  |  6  |                                                     |  7  |  8  |  9  |  10 |  11 |  12 |  13 |
// |  14 |  15 |  16 |  17 |  18 |  19 |  20 |                                                     |  21 |  22 |  23 |  24 |  25 |  26 |  27 |
// |  28 |  29 |  30 |  31 |  32 |  33 |  34 |  35 |  36 ||                           ||  37 |  38 |  39 |  40 |  41 |  42 |  43 |  44 |  45 |
// |  46 |  47 |  48 |  49 |  50 |  51 | *52*| *53*|  54 |||  *56* ||   -   ||  *57* |||  58 | *59*| *60*|  61 |  62 |  63 |  64 |  65 |  67 |
// |  68 |  69 |  70 |  71 |  72 |  x  |  73 |  74 |  75 ||                           ||  76 |  77 |  78 |  x  |  79 |  80 |  81 |  82 |  83 |
// -------------------------------------------------------------------------------------------------------------------------------------------
/ {
    combos {
        compatible = "zmk,combos";

        combo_windows {
            timeout-ms = <50>;
            key-positions = <29 30 31 32>;
            bindings = <&tog 1>;
                     };
          };
  };


/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };


    keymap {
        compatible = "zmk,keymap";


        macOS_layer {
            bindings = <
   &kp EQUAL     &kp N1     &kp N2                &kp N3     &kp N4     &kp N5  &kp LG(LS(NUMBER_4))                                                                                      &tog 3         &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
   &kp DEL       &kp Q      &kp W                 &kp E      &kp R      &kp T   &mt LG(V) LG(C)                                                                                           &kp LG(F)      &kp Y   &kp U   &kp I      &kp O     &kp P     &kp RA(NUMBER_6)
   &kp CAPSLOCK  &kp A      &kp S                 &kp D      &kp F      &kp G   &kp RA(RS(RCTRL))  &kp ESC        &kp RCMD                            &kp RALT          &kp LEFT_CONTROL  &kp RA(RCTRL)  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
   &kp LSHFT     &kp Z      &kp X                 &kp C      &kp V      &kp B   &none              &none          &kp C_VOLUME_UP     &none   &none   &kp C_MUTE        &none             &none          &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
   &mo 2         &kp GRAVE  &kp LG(LS(NUMBER_4))  &kp LEFT   &kp RIGHT          &kp SPACE          &kp BACKSPACE  &kp C_VOLUME_DOWN                   &kp C_PLAY_PAUSE  &kp TAB           &kp ENTER              &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        winOS_layer {
            bindings = <
   &kp EQUAL         &kp N1     &kp N2                &kp N3     &kp N4     &kp N5  &kp LG(Z)                                                                                                  &tog 3          &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
   &kp DEL           &kp Q      &kp W                 &kp E      &kp R      &kp T   &mt LG(V) LG(C)                                                                                            &kp LG(F)       &kp Y   &kp U   &kp I      &kp O     &kp P     &kp RA(NUMBER_6)
   &kp CAPSLOCK      &kp A      &kp S                 &kp D      &kp F      &kp G   &kp RA(RS(RCTRL))  &kp ESC        &kp LEFT_CONTROL                    &kp RALT          &kp RIGHT_CONTROL  &kp RA(RCTRL)   &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
   &kp LSHFT         &kp Z      &kp X                 &kp C      &kp V      &kp B   &none              &none          &kp C_VOLUME_UP     &none   &none   &kp C_MUTE        &none              &none           &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
   &kp LEFT_CONTROL  &kp GRAVE  &kp LG(LS(NUMBER_4))  &kp LEFT   &kp RIGHT          &kp SPACE          &kp BACKSPACE  &kp C_VOLUME_DOWN                   &kp C_PLAY_PAUSE  &kp TAB            &kp ENTER               &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        numsym_layer {
            bindings = <
   &kp EQUAL  &kp N1           &kp N2       &kp N3                &kp N4                 &kp N5     &trans                                                                &mo 3      &kp N6  &kp N7      &kp N8        &kp N9         &kp N0           &kp MINUS
   &kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE   &none                                                                 &none      &none   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MULTIPLY  &kp KP_PLUS
   &kp ESC    &kp HASH         &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE  &none     &kp LCTRL  &kp LALT                   &kp LGUI   &kp RCTRL  &none      &none   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_DIVIDE    &kp SQT
   &kp LSHFT  &kp PERCENT      &kp CARET    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE  &none     &none      &kp HOME   &none   &none   &kp PG_UP  &none      &none      &none   &kp KP_N1   &kp KP_N2     &kp KP_N3      &none            &kp RSHFT
   &none      &kp GRAVE        &kp CAPS     &kp LEFT              &kp RIGHT                         &kp BSPC  &kp DEL    &kp END                    &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp N0        &kp KP_DOT     &kp RBKT         &tog 2
            >;
        };

        sttg_layer {
            bindings = <
   &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                                &tog 3                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
   &none  &none         &none         &none         &none         &none         &bootloader                                                                          &bootloader             &none         &none         &none         &none         &none          &none
   &none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                   &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none          &none
   &none  &none         &none         &none         &none         &none         &none                   &none        &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none          &none
   &none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG   &none                   &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none          &none
            >;
        };
    };
};
