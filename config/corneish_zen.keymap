
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


// Layers
#define BASE 0
#define WIN 1
#define NMBPD 2
#define NMSYM 3
#define MEDIA 4
#define CS 5
#define STTG 6

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        //zmk,matrix_transform = &five_column_transform;
    };
};

// Combination Behaviors
// _____________________________________   _____________________________________
// |  0  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  10 |  11 |
// |  12 |  13 |  14 |  15 |  16 |  17 |   |  18 |  19 |  20 |  21 |  22 |  23 |
// |  24 |  25 |  26 |  27 |  28 |  29 |   |  30 |  31 |  32 |  33 |  34 |  35 |
//                   |  36 |  37 |  38 |   |  39 |  40 |  41 |

/ {
    combos {
        compatible = "zmk,combos";

        combo_WIN {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&tog 1>;
                       };

        combo_COPYPASTEmac {
            timeout-ms = <50>;
            key-positions = <15 16>;
            layers = <0 2 3 4>;
            bindings = <&mt LG(V) LG(C)>;
                     };  
                     
        combo_COPYPASTEwin {
            timeout-ms = <50>;
            key-positions = <15 16>;
            layers = <1>;
            bindings = <&mt LC(V) LC(C)>;
                     };
                      
        combo_CSGO {
            timeout-ms = <50>;
            key-positions = <14 27>;
            bindings = <&tog 4>;
                       };
                     
        combo_ToggleNSleft {
            timeout-ms = <30>;
            key-positions = <13 14>;
            bindings = <&mo 3>;
                     };
                     
        combo_DEL {
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&kp DEL>;
                       };
                                              
        combo_ToggleMEDleft {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&mo 4>;
                     };
                     
        combo_STTG {
            timeout-ms = <50>;
            key-positions = <8 9 10>;
            bindings = <&tog 5>;
                       };
                                          
        combo_ToggleMEDright {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&mo 4>;
                     };
                     
        combo_CAPS {
            timeout-ms = <40>;
            key-positions = <19 20>;
            bindings = <&kp CAPSLOCK>;
                     };
                     
        combo_SEC {
            timeout-ms = <40>;
            key-positions = <20 21>;
            bindings = <&kp RA(NUMBER_6)>;
                       };     
                     
        combo_ToggleNSright {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&mo 3>;
                     };  
           };
    };

// Hold-tap behaviors
&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
    quick-tap-ms = <200>;
};

//Keymap
/{
    keymap {
        compatible = "zmk,keymap";

base_layer {
            label = "BASE";

            // _____________________________________   _____________________________________
            // |     |(`) Q|  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  | O(-)| P(=)|     |
            // |     |A DEL|  S  |  D  |  F  |  G  |   |H (F)|  J  |  K  |  L  |' (;)|     |
            // |     |Z SFT|  X  |  C  |  V  |  B  |   |N (S)|  M  |  ,  |  .  |/ SFT|     |
            //                   |NUMPD| SPC | BSPC|   | TAB | ENT | MED |
            //                          (ESC) (LCMD)   (RALT)(RCTRL)
            
            bindings = <
  &none      &mt GRAVE Q  &kp W  &kp E  &kp R  &kp T        &kp Y            &kp U  &kp I      &mt MINUS O  &mt EQUAL P         &none
  &none      &mt DEL A    &kp S  &kp D  &kp F  &kp G        &mt LG(F) H      &kp J  &kp K      &kp L        &mt SEMI SQT        &none
  &none      &mt LSHFT Z  &kp X  &kp C  &kp V  &kp B        &mt RA(RC(S)) N  &kp M  &kp COMMA  &kp DOT      &mt RSHFT FSLH      &none
                 &mo 2  &mt ESC SPACE  &mt LCMD BSPC        &mt RALT TAB  &mt RCTRL ENTER  &mo 4
            >;
        };

win_layer {
            label = "WIN";

            // _____________________________________   _____________________________________
            // |     |(`) Q|  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  | O(-)| P(=)|     |
            // |     |A DEL|  S  |  D  |  F  |  G  |   |H (F)|  J  |  K  |  L  |' (;)|     |
            // |     |Z SFT|  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |     |
            //                   |NUMPD| SPC |BSPC |   | TAB | ENT | MED |
            //                         (ESC) (LCTRL)   (RALT)(RCTRL)
            
            bindings = <
  &none      &mt GRAVE Q   &kp W     &kp E     &kp R     &kp T           &kp Y        &kp U     &kp I      &mt MINUS O  &mt EQUAL P         &none
  &none      &mt DEL A     &kp S     &kp D     &kp F     &kp G           &mt LC(F) H  &kp J     &kp K      &kp L        &mt SEMI SQT        &none
  &none      &mt LSHFT Z   &kp X     &kp C     &kp V     &kp B           &kp N        &kp M     &kp COMMA  &kp DOT      &mt RSHFT FSLH      &none
                          &mo 2  &mt ESC SPACE  &mt LCTRL BSPC          &mt RALT TAB &mt RCTRL ENTER  &mo 3
            >;
        };

numpad_layer {
            label = "NMBPD";

            // _____________________________________   _____________________________________
            // |     |LCTRL|     |  {  |  }  |  +  |   |  -  |  7  |  8  |  9  |     |     |
            // |     |LALT |     |  (  |  )  |  *  |   |  /  |  4  |  5  |  6  |     |     |
            // |     |LSHFT|     |  [  |  ]  |  =  |   |     |  1  |  2  |  3  |     |     |
            //                   | NUM2| SPC | BPSC|   | TAB | ENT |  0  |
            //                                (LCMD)

            bindings = <
&none      &kp LCTRL   &none     &kp LBRC   &kp RBRC  &kp PLUS         &kp MINUS  &kp N7  &kp N8  &kp N9  &none       &none
&none      &kp LALT    &none     &kp LPAR   &kp RPAR  &kp STAR         &kp SLASH  &kp N4  &kp N5  &kp N6  &none       &none
&none      &kp LSHIFT  &kp LCMD  &kp LBKT   &kp RBKT  &kp EQUAL        &none      &kp N1  &kp N2  &kp N3  &none       &none
                               &tog 2  &kp SPACE  &mt LCMD BSPC        &kp TAB  &kp ENTER  &kp N0
            >;
        };
        
        numbers_layer {
            label = "NMSYM";

            // _____________________________________   _____________________________________
            // |     |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |     |
            // |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            // |     |     |     |     |     |     |   |     |     |     |     |     |     |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&none      &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT       &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR      &none
&none      &kp N1    &kp N2  &kp N3    &kp N4    &kp N5          &kp N6     &kp N7    &kp N8    &kp N9    &kp N0        &none
&none      &none     &none   &none     &none     &none           &none      &none     &none     &none     &none         &none
                                   &none     &none   &none       &none     &none   &none
            >;
        };

        media_layer {
            label = "MEDIA";

            // _____________________________________   _____________________________________
            // |     |     |     |  UP |     |     |   |     |briDN|briUP|     |     |     |
            // |     | MEGA| LEFT| DOWN|RIGHT|     |   |     |VOLDN|VOLUP|VMUTE|     |     |
            // |     |     |     |     |     |     |   |     | p_p |     |     |     |     |
            //                   |SUPER| MEH | CMD |   |     | ENT | MED |

            bindings = <
&none      &none                 &none     &kp UP    &none      &none        &none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none       &none       &none
&none      &kp RA(RS(RA(RCMD)))  &kp LEFT  &kp DOWN  &kp RIGHT  &none        &none  &kp C_VOL_DN          &kp C_VOL_UP          &kp C_MUTE  &none       &none
&none      &none                 &none     &none     &none      &none        &none  &kp C_PP              &none                 &none       &none       &none
                           &kp RA(RS(RCTRL))  &kp RA(RCTRL)  &kp LCMD        &none  &kp ENTER  &tog 3
            >;
        };

        cs_layer {
            label = "CS";

            // _____________________________________   _____________________________________
            // |     |  5  |  1  |  2  |  3  |  4  |   |VOLUP|  F1 | ALL |     |     |     |
            // |     | B F |  Q  |  W  |  E  |  R  |   |VOLDN|  F2 |TEAMS|     |     |     |
            // |     |LCTRL|  A  |  S  |  D  |  G  |   |VMUTE|  V  | ESC |     |     |     |
            //                   |LSHFT|SPACE|LSHFT|   | TAB | ESC |     |

            bindings = <
&none       &kp N5      &kp N1  &kp N2  &kp N3  &kp N4      &kp C_VOL_UP  &kp F1  &kp Y    &none  &none       &tog 4
&none       &mt B F     &kp Q   &kp W   &kp E   &kp R       &kp C_VOL_DN  &kp F2  &kp U    &none  &none       &tog 4
&none       &kp LCTRL   &kp A   &kp S   &kp D   &kp G       &kp C_MUTE    &kp V   &kp ESC  &none  &none       &tog 4
                       &kp LSHFT  &kp SPACE  &kp LSHFT      &kp TAB  &kp ESC  &none
            >;
        };

        sttg_layer {
            label = "STTG";
            
            // _____________________________________   _____________________________________
            // |     | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |     |
            // |     |     |     |     |     |     |   | BLE | USB |SWTCH|     |     |     |
            // |     |     |     |     |     |     |   |     |     |     |     |     |     |
            //                   |BTCLR|BTCLR|BTCLR|   | SET | SET | SET |
            
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                                         &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &none  &none  &none
&none  &none  &none  &none  &none  &none                                         &none  &none  &none  &none  &none  &none
                                     &bt BT_CLR    &bt BT_CLR    &bt BT_CLR      &tog 5  &tog 5  &tog 5                              
            >;
        };
    };
};
